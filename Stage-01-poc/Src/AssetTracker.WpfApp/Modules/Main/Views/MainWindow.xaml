<Window x:Class="AssetTracker.WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AssetTracker.WpfApp"
        xmlns:converters="clr-namespace:AssetTracker.WpfApp.Common.Converters"
        xmlns:views="clr-namespace:AssetTracker.WpfApp.Common.Views"
        xmlns:mainvm="clr-namespace:AssetTracker.WpfApp.Modules.Main.ViewModels"
        xmlns:mainv="clr-namespace:AssetTracker.WpfApp.Modules.Main.Views"
        mc:Ignorable="d"
        Icon="/Assets/appIcon.png"
        WindowState="Maximized"
        Title="Asset Tracker" Height="600" Width="800">
    <Window.Resources>
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <!-- Template for displaying service modules -->
        <DataTemplate DataType="{x:Type views:ScraperServiceListItemView}">
            <ContentControl Content="{Binding}"/>
        </DataTemplate>

        <!-- RadioButton as Tab Header Style -->
        <Style x:Key="TabHeaderRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="MinWidth" Value="90" />
            <Setter Property="MinHeight" Value="32" />
            <Setter Property="Background" Value="#F5F5F5"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1,1,1,0"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" 
                        CornerRadius="6,6,0,0" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Margin="1,1,1,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E8E8E8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#D0D0D0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="#0078D4"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#CCCCCC"/>
                                <!-- Remove bottom border to connect with content -->
                                <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FAFAFA"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#E8E8E8"/>
                                <Setter Property="Foreground" Value="#AAAAAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type mainvm:MyAssetsViewModel}">
            <mainv:MyAssetsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type mainvm:ImportsViewModel}">
            <mainv:ImportsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type mainvm:CheckAssetsViewModel}">
            <mainv:CheckAssetsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type mainvm:SettingsViewModel}">
            <mainv:SettingsView />
        </DataTemplate>


    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Menu Strip-->
        <DockPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <RadioButton Style="{StaticResource TabHeaderRadioButtonStyle}"
                             Content="My Assets" 
                             GroupName="TabGroup"
                             IsChecked="True"
                             Command="{Binding NavigateCommand}"
                             CommandParameter="{x:Static mainvm:MainWindowViewModel.MyAssetsViewKey}"
                             />
                <RadioButton Style="{StaticResource TabHeaderRadioButtonStyle}" 
                             Content="Importers" 
                             GroupName="TabGroup"
                             Command="{Binding NavigateCommand}"
                             CommandParameter="{x:Static mainvm:MainWindowViewModel.ImportsViewKey}"/>
                <RadioButton Style="{StaticResource TabHeaderRadioButtonStyle}" 
                             Content="Check urls" 
                             GroupName="TabGroup"
                             Command="{Binding NavigateCommand}"
                             CommandParameter="{x:Static mainvm:MainWindowViewModel.CheckAssetsViewKey}"/>
                <RadioButton Style="{StaticResource TabHeaderRadioButtonStyle}" 
                             Content="Settings" 
                             GroupName="TabGroup"
                             Command="{Binding NavigateCommand}"
                             CommandParameter="{x:Static mainvm:MainWindowViewModel.SettingsViewKey}"/>
            </StackPanel>
        </DockPanel>

        <!-- Content Area -->
        <ContentControl Content="{Binding CurrentView}"
                            Grid.Row="1"
                            HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch"/>
        <!--<ContentControl Content="{Binding CurrentPage}"/>-->


    </Grid>

</Window>
