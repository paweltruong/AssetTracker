name: SonarCloud Analysis - Stage 02

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_PATH: 'Stage-02-new-architecture/Src/AssetTracker.sln'

jobs:
  analyze:
    runs-on: ubuntu-latest  # Switch back to Linux
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Verify solution file exists
      run: |
        if [ ! -f "${{ env.SOLUTION_PATH }}" ]; then
          echo "❌ Solution file not found at: ${{ env.SOLUTION_PATH }}"
          exit 1
        fi
        echo "✅ Solution file found: ${{ env.SOLUTION_PATH }}"

    - name: Build non-WPF projects only
      run: |
        # Build only non-WPF projects
        find Stage-02-new-architecture/Src -name "*.csproj" \
          ! -path "*/AssetsTracker.Wpf.Core/*" \
          ! -path "*/AssetTracker.WpfApp/*" \
          ! -name "*Wpf*" | xargs -I {} dotnet restore {}
        
        find Stage-02-new-architecture/Src -name "*.csproj" \
          ! -path "*/AssetsTracker.Wpf.Core/*" \
          ! -path "*/AssetTracker.WpfApp/*" \
          ! -name "*Wpf*" | xargs -I {} dotnet build {} --configuration Release --no-restore

    - name: Run tests with coverage (non-WPF only)
      run: |
        # Find and run tests from non-WPF projects only
        find Stage-02-new-architecture/Src -name "*Tests.csproj" -o -name "*Test.csproj" \
          ! -path "*/AssetsTracker.Wpf.Core/*" \
          ! -path "*/AssetTracker.WpfApp/*" \
          ! -name "*Wpf*" | xargs -I {} dotnet test {} \
          --configuration Release \
          --no-build \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage \
          --logger "trx;LogFileName=test-results.trx" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

    - name: Verify coverage files
      run: |
        if find ./coverage -name "*.cobertura.xml" | grep -q .; then
          echo "✅ Coverage files found:"
          find ./coverage -name "*.cobertura.xml" -exec echo "  - {}" \;
        else
          echo "❌ No coverage files found!"
          # Don't exit with error, SonarCloud can still analyze code quality
        fi

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.sources=Stage-02-new-architecture/Src
          -Dsonar.tests=Stage-02-new-architecture/Src
          -Dsonar.exclusions=**/Stage-01-poc/**,**/bin/**,**/obj/**,**/*.csproj,**/*.config,**/AssetsTracker.Wpf.Core/**,**/AssetTracker.WpfApp/**
          -Dsonar.coverage.exclusions=**/Stage-01-poc/**,**/Test/**/*,**/*Test/*,**/*.Tests/*,**/Migrations/*,**/Program.cs,**/AssetsTracker.Wpf.Core/**,**/AssetTracker.WpfApp/**
          -Dsonar.cs.vscoveragexml.reportsPaths=./coverage/**/coverage.cobertura.xml
          -Dsonar.cpd.exclusions=**/Stage-01-poc/**,**/AssetsTracker.Wpf.Core/**,**/AssetTracker.WpfApp/**
